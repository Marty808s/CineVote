services:

  postgres:
    image: postgres:${PG_VERSION}
    container_name: cinevote_postgresql
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./importDB:/docker-entrypoint-initdb.d
    ports:
      - '127.0.0.1:5432:5432'
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_USER=${PG_USER}
    networks:
      - cinevote
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 30

  django:
    build:
      context: .
      dockerfile: .docker/Backend/Dockerfile
      args:
        - PY_VERSION=${PY_VERSION}
    container_name: cinevote-backend
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
    - DJANGO_ALLOWED_HOSTS=*  # Pro vývoj
    - CORS_ALLOW_ALL_ORIGINS=True  # Pro vývoj
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cinevote

  frontend:
    build:
      context: .
      dockerfile: .docker/Frontend/Dockerfile
      args:
       - NODE_VERSION=${NODE_VERSION}
       - REACT_PORT=${REACT_PORT}
    container_name: cinevote-frontend
    command: ["npm", "start"]
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./frontend:/app/frontend
      - node-modules:/app/frontend/node_modules
    depends_on:
      - django
    ports:
      - ${REACT_PORT}:${REACT_PORT}
    environment:
    - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
    networks:
      - cinevote
  pgadmin:
    image: dpage/pgadmin4
    container_name: cinevote-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - cinevote
networks:
  cinevote:
    name: cinevote
volumes:
  node-modules:
  pgadmin-data:
  pgdata: